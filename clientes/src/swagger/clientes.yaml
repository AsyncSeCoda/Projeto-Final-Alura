openapi: 3.0.3
info:
  title: Clientes API
  description: API do microsserviço de Clientes
  version: 0.0.1
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:3001
tags:
  - name: account
    description: Rotas de Contas(Account)
  - name: clientes
    description: Rotas de Clientes
paths:
  /api/admin/accounts:
    get:
      tags:
        - account
      summary: List accounts
      description: List all accounts
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      tags:
        - account
      summary: Add account
      description: Add new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: unauthorized
  /api/accounts/login:
    post:
      tags:
        - account
      summary: Login account
      description: Login account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                senha:
                  type: string
                  format: password
      responses:
        '204':
          description: login success
          headers:
            Authorization:
              description: Token de autenticação
              schema:
                type: string
        '400':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email ou senha inválido
  /api/admin/accounts/{id}:
    get:
      tags:
        - account
      summary: Find account
      description: Find one specific account
      parameters:
        - name: id
          in: path
          description: ID of account that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: invalid ID supplied
        '404':
          description: not found
    put:
      tags:
        - account
      summary: Update account
      description: Update account by entering the whole updated account
      parameters:
        - name: id
          in: path
          description: ID of account that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: invalid ID supplied
        '401':
          description: unauthorized
    delete:
      tags:
        - account
      summary: Delete account
      description: Delete account by entering its ID
      parameters:
        - name: id
          in: path
          description: ID of account that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: no content
        '400':
          description: invalid ID supplied
        '401':
          description: unauthorized
  /api/admin/clients:
    get:
      tags:
        - clientes
      summary: Retorna todos os clientes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        '404':
          description: Nenhum cliente encontrado
    post:
      tags:
        - clientes
      summary: Cria um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string

  /api/admin/clients/{id}:
    get:
      tags:
        - clientes
      summary: Retorna um cliente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do cliente
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dadosPessoais:
                    $ref: '#/components/schemas/dadosPessoais'
                  endereco:
                    $ref: '#/components/schemas/endereco'
        '404':
          description: Nenhum cliente encontrado
    put:
      tags:
        - clientes
      summary: Atualiza um cliente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Cliente atualizado com sucesso
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
        '404':
          description: Cliente não encontrado
    delete:
      tags:
        - clientes
      summary: Remove um cliente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do cliente
      responses:
        '200':
          description: Cliente removido com sucesso
        '404':
          description: Cliente não encontrado
  /api/admin/clients/card:
    get:
      tags:
        - clientes
      summary: Retorna um cliente pelos dados do cartão
      parameters:
        - in: query
          name: numeroCartao
          required: true
          schema:
            type: string
          description: Número do cartão
        - in: query
          name: nomeCartao
          required: true
          schema:
            type: string
          description: Nome do titular do cartão
        - in: query
          name: validadeCartao
          required: true
          schema:
            type: string
          description: Validade do cartão
        - in: query
          name: cvcCartao
          required: true
          schema:
            type: string
          description: CVC do cartão
        - in: query
          name: vencimentoFatura
          required: true
          schema:
            type: string
          description: Vencimento da Fatura
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  idCliente:
                    type: string
                  rendaMensal:
                    type: number
        '404':
          description: Nenhum cliente encontrado com os dados disponibilizados
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
    dadosPessoais:
      type: object
      properties:
        nome:
          type: string
        cpf:
          type: string
        email:
          type: string
          format: email
        telefone:
          type: string
        rendaMensal:
          type: number
    endereco:
      type: object
      properties:
        rua:
          type: string
        numero:
          type: number
        complemento:
          type: string
        cep:
          type: string
        cidade:
          type: string
        uf:
          type: string
    cartao:
      type: object
      properties:
        numeroCartao:
          type: string
        nomeCartao:
          type: string
        validadeCartao:
          type: string
        cvcCartao:
          type: string
        vencimentoFatura:
          type: string
    Client:
      type: object
      properties:
        dadosPessoais:
          $ref: '#/components/schemas/dadosPessoais'
        endereco:
          $ref: '#/components/schemas/endereco'
        cartao:
          $ref: '#/components/schemas/cartao'
        